// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for retrieving all probes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.GetSyntheticMonitoringProbes(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSyntheticMonitoringProbes(ctx *pulumi.Context, args *GetSyntheticMonitoringProbesArgs, opts ...pulumi.InvokeOption) (*GetSyntheticMonitoringProbesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSyntheticMonitoringProbesResult
	err := ctx.Invoke("grafana:index/getSyntheticMonitoringProbes:getSyntheticMonitoringProbes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSyntheticMonitoringProbes.
type GetSyntheticMonitoringProbesArgs struct {
	// If true, only probes that are not deprecated will be returned. Defaults to `true`.
	FilterDeprecated *bool `pulumi:"filterDeprecated"`
}

// A collection of values returned by getSyntheticMonitoringProbes.
type GetSyntheticMonitoringProbesResult struct {
	// If true, only probes that are not deprecated will be returned. Defaults to `true`.
	FilterDeprecated *bool `pulumi:"filterDeprecated"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Map of probes with their names as keys and IDs as values.
	Probes map[string]int `pulumi:"probes"`
}

func GetSyntheticMonitoringProbesOutput(ctx *pulumi.Context, args GetSyntheticMonitoringProbesOutputArgs, opts ...pulumi.InvokeOption) GetSyntheticMonitoringProbesResultOutput {
	outputResult := pulumix.ApplyErr[*GetSyntheticMonitoringProbesArgs](args.ToOutput(), func(plainArgs *GetSyntheticMonitoringProbesArgs) (*GetSyntheticMonitoringProbesResult, error) {
		return GetSyntheticMonitoringProbes(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSyntheticMonitoringProbesResultOutput, *GetSyntheticMonitoringProbesResult](outputResult)
}

// A collection of arguments for invoking getSyntheticMonitoringProbes.
type GetSyntheticMonitoringProbesOutputArgs struct {
	// If true, only probes that are not deprecated will be returned. Defaults to `true`.
	FilterDeprecated pulumix.Input[*bool] `pulumi:"filterDeprecated"`
}

func (args GetSyntheticMonitoringProbesOutputArgs) ToOutput() pulumix.Output[*GetSyntheticMonitoringProbesArgs] {
	allArgs := pulumix.All(
		args.FilterDeprecated.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSyntheticMonitoringProbesArgs {
		return &GetSyntheticMonitoringProbesArgs{
			FilterDeprecated: resolvedArgs[0].(*bool),
		}
	})
}

type GetSyntheticMonitoringProbesResultOutput struct{ *pulumi.OutputState }

func (GetSyntheticMonitoringProbesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticMonitoringProbesResult)(nil)).Elem()
}

func (o GetSyntheticMonitoringProbesResultOutput) ToOutput(context.Context) pulumix.Output[*GetSyntheticMonitoringProbesResult] {
	return pulumix.Output[*GetSyntheticMonitoringProbesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSyntheticMonitoringProbesResultOutput) FilterDeprecated() pulumix.Output[*bool] {
	return pulumix.Apply[*GetSyntheticMonitoringProbesResult](o, func(v *GetSyntheticMonitoringProbesResult) *bool { return v.FilterDeprecated })
}

func (o GetSyntheticMonitoringProbesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSyntheticMonitoringProbesResult](o, func(v *GetSyntheticMonitoringProbesResult) string { return v.Id })
}

func (o GetSyntheticMonitoringProbesResultOutput) Probes() pulumix.MapOutput[int] {
	value := pulumix.Apply[*GetSyntheticMonitoringProbesResult](o, func(v *GetSyntheticMonitoringProbesResult) map[string]int { return v.Probes })
	return pulumix.MapOutput[int]{
		OutputState: value.OutputState,
	}
}
