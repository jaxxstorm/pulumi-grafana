// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// **Note:** This resource is available only with Grafana 9.1+.
//
// Manages service accounts of a Grafana Cloud stack using the Cloud API
// This can be used to bootstrap a management service account for a new stack
//
// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/service-accounts/)
// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.NewCloudStackServiceAccount(ctx, "cloudSa", &grafana.CloudStackServiceAccountArgs{
//				IsDisabled: pulumi.Bool(false),
//				Role:       pulumi.String("Admin"),
//				StackSlug:  pulumi.String("<your stack slug>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type CloudStackServiceAccount struct {
	pulumi.CustomResourceState

	// The disabled status for the service account. Defaults to `false`.
	IsDisabled pulumix.Output[*bool] `pulumi:"isDisabled"`
	// The name of the service account.
	Name pulumix.Output[string] `pulumi:"name"`
	// The basic role of the service account in the organization.
	Role      pulumix.Output[*string] `pulumi:"role"`
	StackSlug pulumix.Output[string]  `pulumi:"stackSlug"`
}

// NewCloudStackServiceAccount registers a new resource with the given unique name, arguments, and options.
func NewCloudStackServiceAccount(ctx *pulumi.Context,
	name string, args *CloudStackServiceAccountArgs, opts ...pulumi.ResourceOption) (*CloudStackServiceAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StackSlug == nil {
		return nil, errors.New("invalid value for required argument 'StackSlug'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudStackServiceAccount
	err := ctx.RegisterResource("grafana:index/cloudStackServiceAccount:CloudStackServiceAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudStackServiceAccount gets an existing CloudStackServiceAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudStackServiceAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudStackServiceAccountState, opts ...pulumi.ResourceOption) (*CloudStackServiceAccount, error) {
	var resource CloudStackServiceAccount
	err := ctx.ReadResource("grafana:index/cloudStackServiceAccount:CloudStackServiceAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudStackServiceAccount resources.
type cloudStackServiceAccountState struct {
	// The disabled status for the service account. Defaults to `false`.
	IsDisabled *bool `pulumi:"isDisabled"`
	// The name of the service account.
	Name *string `pulumi:"name"`
	// The basic role of the service account in the organization.
	Role      *string `pulumi:"role"`
	StackSlug *string `pulumi:"stackSlug"`
}

type CloudStackServiceAccountState struct {
	// The disabled status for the service account. Defaults to `false`.
	IsDisabled pulumix.Input[*bool]
	// The name of the service account.
	Name pulumix.Input[*string]
	// The basic role of the service account in the organization.
	Role      pulumix.Input[*string]
	StackSlug pulumix.Input[*string]
}

func (CloudStackServiceAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudStackServiceAccountState)(nil)).Elem()
}

type cloudStackServiceAccountArgs struct {
	// The disabled status for the service account. Defaults to `false`.
	IsDisabled *bool `pulumi:"isDisabled"`
	// The name of the service account.
	Name *string `pulumi:"name"`
	// The basic role of the service account in the organization.
	Role      *string `pulumi:"role"`
	StackSlug string  `pulumi:"stackSlug"`
}

// The set of arguments for constructing a CloudStackServiceAccount resource.
type CloudStackServiceAccountArgs struct {
	// The disabled status for the service account. Defaults to `false`.
	IsDisabled pulumix.Input[*bool]
	// The name of the service account.
	Name pulumix.Input[*string]
	// The basic role of the service account in the organization.
	Role      pulumix.Input[*string]
	StackSlug pulumix.Input[string]
}

func (CloudStackServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudStackServiceAccountArgs)(nil)).Elem()
}

type CloudStackServiceAccountOutput struct{ *pulumi.OutputState }

func (CloudStackServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudStackServiceAccount)(nil)).Elem()
}

func (o CloudStackServiceAccountOutput) ToCloudStackServiceAccountOutput() CloudStackServiceAccountOutput {
	return o
}

func (o CloudStackServiceAccountOutput) ToCloudStackServiceAccountOutputWithContext(ctx context.Context) CloudStackServiceAccountOutput {
	return o
}

func (o CloudStackServiceAccountOutput) ToOutput(ctx context.Context) pulumix.Output[CloudStackServiceAccount] {
	return pulumix.Output[CloudStackServiceAccount]{
		OutputState: o.OutputState,
	}
}

// The disabled status for the service account. Defaults to `false`.
func (o CloudStackServiceAccountOutput) IsDisabled() pulumix.Output[*bool] {
	value := pulumix.Apply[CloudStackServiceAccount](o, func(v CloudStackServiceAccount) pulumix.Output[*bool] { return v.IsDisabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The name of the service account.
func (o CloudStackServiceAccountOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[CloudStackServiceAccount](o, func(v CloudStackServiceAccount) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The basic role of the service account in the organization.
func (o CloudStackServiceAccountOutput) Role() pulumix.Output[*string] {
	value := pulumix.Apply[CloudStackServiceAccount](o, func(v CloudStackServiceAccount) pulumix.Output[*string] { return v.Role })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o CloudStackServiceAccountOutput) StackSlug() pulumix.Output[string] {
	value := pulumix.Apply[CloudStackServiceAccount](o, func(v CloudStackServiceAccount) pulumix.Output[string] { return v.StackSlug })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(CloudStackServiceAccountOutput{})
}
