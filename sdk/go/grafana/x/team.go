// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/team-management/)
// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/team/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.NewTeam(ctx, "test-team", &grafana.TeamArgs{
//				Email: pulumi.String("teamemail@example.com"),
//				Members: pulumi.StringArray{
//					pulumi.String("viewer-01@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Team struct {
	pulumi.CustomResourceState

	// An email address for the team.
	Email pulumix.Output[*string] `pulumi:"email"`
	// Ignores team members that have been added to team by [Team
	// Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/). Team Sync can be
	// provisioned using [grafana_team_external_group
	// resource](https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
	IgnoreExternallySyncedMembers pulumix.Output[*bool] `pulumi:"ignoreExternallySyncedMembers"`
	// A set of email addresses corresponding to users who should be given membership to the team. Note: users specified here
	// must already exist in Grafana.
	Members pulumix.ArrayOutput[string] `pulumi:"members"`
	// The display name for the Grafana team created.
	Name pulumix.Output[string] `pulumi:"name"`
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId       pulumix.Output[*string]                                    `pulumi:"orgId"`
	Preferences pulumix.GPtrOutput[TeamPreferences, TeamPreferencesOutput] `pulumi:"preferences"`
	// The team id assigned to this team by Grafana.
	TeamId pulumix.Output[int] `pulumi:"teamId"`
	// Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise. * [Official
	// documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/) * [HTTP
	// API](https://grafana.com/docs/grafana/latest/developers/http_api/external_group_sync/)
	TeamSync pulumix.GPtrOutput[TeamTeamSync, TeamTeamSyncOutput] `pulumi:"teamSync"`
}

// NewTeam registers a new resource with the given unique name, arguments, and options.
func NewTeam(ctx *pulumi.Context,
	name string, args *TeamArgs, opts ...pulumi.ResourceOption) (*Team, error) {
	if args == nil {
		args = &TeamArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Team
	err := ctx.RegisterResource("grafana:index/team:Team", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTeam gets an existing Team resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TeamState, opts ...pulumi.ResourceOption) (*Team, error) {
	var resource Team
	err := ctx.ReadResource("grafana:index/team:Team", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Team resources.
type teamState struct {
	// An email address for the team.
	Email *string `pulumi:"email"`
	// Ignores team members that have been added to team by [Team
	// Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/). Team Sync can be
	// provisioned using [grafana_team_external_group
	// resource](https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
	IgnoreExternallySyncedMembers *bool `pulumi:"ignoreExternallySyncedMembers"`
	// A set of email addresses corresponding to users who should be given membership to the team. Note: users specified here
	// must already exist in Grafana.
	Members []string `pulumi:"members"`
	// The display name for the Grafana team created.
	Name *string `pulumi:"name"`
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId       *string          `pulumi:"orgId"`
	Preferences *TeamPreferences `pulumi:"preferences"`
	// The team id assigned to this team by Grafana.
	TeamId *int `pulumi:"teamId"`
	// Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise. * [Official
	// documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/) * [HTTP
	// API](https://grafana.com/docs/grafana/latest/developers/http_api/external_group_sync/)
	TeamSync *TeamTeamSync `pulumi:"teamSync"`
}

type TeamState struct {
	// An email address for the team.
	Email pulumix.Input[*string]
	// Ignores team members that have been added to team by [Team
	// Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/). Team Sync can be
	// provisioned using [grafana_team_external_group
	// resource](https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
	IgnoreExternallySyncedMembers pulumix.Input[*bool]
	// A set of email addresses corresponding to users who should be given membership to the team. Note: users specified here
	// must already exist in Grafana.
	Members pulumix.Input[[]string]
	// The display name for the Grafana team created.
	Name pulumix.Input[*string]
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId       pulumix.Input[*string]
	Preferences pulumix.Input[*TeamPreferencesArgs]
	// The team id assigned to this team by Grafana.
	TeamId pulumix.Input[*int]
	// Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise. * [Official
	// documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/) * [HTTP
	// API](https://grafana.com/docs/grafana/latest/developers/http_api/external_group_sync/)
	TeamSync pulumix.Input[*TeamTeamSyncArgs]
}

func (TeamState) ElementType() reflect.Type {
	return reflect.TypeOf((*teamState)(nil)).Elem()
}

type teamArgs struct {
	// An email address for the team.
	Email *string `pulumi:"email"`
	// Ignores team members that have been added to team by [Team
	// Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/). Team Sync can be
	// provisioned using [grafana_team_external_group
	// resource](https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
	IgnoreExternallySyncedMembers *bool `pulumi:"ignoreExternallySyncedMembers"`
	// A set of email addresses corresponding to users who should be given membership to the team. Note: users specified here
	// must already exist in Grafana.
	Members []string `pulumi:"members"`
	// The display name for the Grafana team created.
	Name *string `pulumi:"name"`
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId       *string          `pulumi:"orgId"`
	Preferences *TeamPreferences `pulumi:"preferences"`
	// Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise. * [Official
	// documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/) * [HTTP
	// API](https://grafana.com/docs/grafana/latest/developers/http_api/external_group_sync/)
	TeamSync *TeamTeamSync `pulumi:"teamSync"`
}

// The set of arguments for constructing a Team resource.
type TeamArgs struct {
	// An email address for the team.
	Email pulumix.Input[*string]
	// Ignores team members that have been added to team by [Team
	// Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/). Team Sync can be
	// provisioned using [grafana_team_external_group
	// resource](https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
	IgnoreExternallySyncedMembers pulumix.Input[*bool]
	// A set of email addresses corresponding to users who should be given membership to the team. Note: users specified here
	// must already exist in Grafana.
	Members pulumix.Input[[]string]
	// The display name for the Grafana team created.
	Name pulumix.Input[*string]
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId       pulumix.Input[*string]
	Preferences pulumix.Input[*TeamPreferencesArgs]
	// Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise. * [Official
	// documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/) * [HTTP
	// API](https://grafana.com/docs/grafana/latest/developers/http_api/external_group_sync/)
	TeamSync pulumix.Input[*TeamTeamSyncArgs]
}

func (TeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*teamArgs)(nil)).Elem()
}

type TeamOutput struct{ *pulumi.OutputState }

func (TeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Team)(nil)).Elem()
}

func (o TeamOutput) ToTeamOutput() TeamOutput {
	return o
}

func (o TeamOutput) ToTeamOutputWithContext(ctx context.Context) TeamOutput {
	return o
}

func (o TeamOutput) ToOutput(ctx context.Context) pulumix.Output[Team] {
	return pulumix.Output[Team]{
		OutputState: o.OutputState,
	}
}

// An email address for the team.
func (o TeamOutput) Email() pulumix.Output[*string] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.Output[*string] { return v.Email })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Ignores team members that have been added to team by [Team
// Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/). Team Sync can be
// provisioned using [grafana_team_external_group
// resource](https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
func (o TeamOutput) IgnoreExternallySyncedMembers() pulumix.Output[*bool] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.Output[*bool] { return v.IgnoreExternallySyncedMembers })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A set of email addresses corresponding to users who should be given membership to the team. Note: users specified here
// must already exist in Grafana.
func (o TeamOutput) Members() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.ArrayOutput[string] { return v.Members })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The display name for the Grafana team created.
func (o TeamOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Organization ID. If not set, the Org ID defined in the provider block will be used.
func (o TeamOutput) OrgId() pulumix.Output[*string] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.Output[*string] { return v.OrgId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o TeamOutput) Preferences() pulumix.GPtrOutput[TeamPreferences, TeamPreferencesOutput] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.GPtrOutput[TeamPreferences, TeamPreferencesOutput] { return v.Preferences })
	unwrapped := pulumix.Flatten[*TeamPreferences, pulumix.GPtrOutput[TeamPreferences, TeamPreferencesOutput]](value)
	return pulumix.GPtrOutput[TeamPreferences, TeamPreferencesOutput]{OutputState: unwrapped.OutputState}
}

// The team id assigned to this team by Grafana.
func (o TeamOutput) TeamId() pulumix.Output[int] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.Output[int] { return v.TeamId })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise. * [Official
// documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/) * [HTTP
// API](https://grafana.com/docs/grafana/latest/developers/http_api/external_group_sync/)
func (o TeamOutput) TeamSync() pulumix.GPtrOutput[TeamTeamSync, TeamTeamSyncOutput] {
	value := pulumix.Apply[Team](o, func(v Team) pulumix.GPtrOutput[TeamTeamSync, TeamTeamSyncOutput] { return v.TeamSync })
	unwrapped := pulumix.Flatten[*TeamTeamSync, pulumix.GPtrOutput[TeamTeamSync, TeamTeamSyncOutput]](value)
	return pulumix.GPtrOutput[TeamTeamSync, TeamTeamSyncOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TeamOutput{})
}
