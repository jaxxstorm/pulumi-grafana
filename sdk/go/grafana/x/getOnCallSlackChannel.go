// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/slack_channels/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.GetOnCallSlackChannel(ctx, &grafana.GetOnCallSlackChannelArgs{
//				Name: "example_slack_channel",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOnCallSlackChannel(ctx *pulumi.Context, args *GetOnCallSlackChannelArgs, opts ...pulumi.InvokeOption) (*GetOnCallSlackChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOnCallSlackChannelResult
	err := ctx.Invoke("grafana:index/getOnCallSlackChannel:getOnCallSlackChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOnCallSlackChannel.
type GetOnCallSlackChannelArgs struct {
	// The Slack channel name.
	Name string `pulumi:"name"`
}

// A collection of values returned by getOnCallSlackChannel.
type GetOnCallSlackChannelResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Slack channel name.
	Name string `pulumi:"name"`
	// The Slack ID of the channel.
	SlackId string `pulumi:"slackId"`
}

func GetOnCallSlackChannelOutput(ctx *pulumi.Context, args GetOnCallSlackChannelOutputArgs, opts ...pulumi.InvokeOption) GetOnCallSlackChannelResultOutput {
	outputResult := pulumix.ApplyErr[*GetOnCallSlackChannelArgs](args.ToOutput(), func(plainArgs *GetOnCallSlackChannelArgs) (*GetOnCallSlackChannelResult, error) {
		return GetOnCallSlackChannel(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetOnCallSlackChannelResultOutput, *GetOnCallSlackChannelResult](outputResult)
}

// A collection of arguments for invoking getOnCallSlackChannel.
type GetOnCallSlackChannelOutputArgs struct {
	// The Slack channel name.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args GetOnCallSlackChannelOutputArgs) ToOutput() pulumix.Output[*GetOnCallSlackChannelArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetOnCallSlackChannelArgs {
		return &GetOnCallSlackChannelArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type GetOnCallSlackChannelResultOutput struct{ *pulumi.OutputState }

func (GetOnCallSlackChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnCallSlackChannelResult)(nil)).Elem()
}

func (o GetOnCallSlackChannelResultOutput) ToOutput(context.Context) pulumix.Output[*GetOnCallSlackChannelResult] {
	return pulumix.Output[*GetOnCallSlackChannelResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOnCallSlackChannelResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetOnCallSlackChannelResult](o, func(v *GetOnCallSlackChannelResult) string { return v.Id })
}

func (o GetOnCallSlackChannelResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetOnCallSlackChannelResult](o, func(v *GetOnCallSlackChannelResult) string { return v.Name })
}

func (o GetOnCallSlackChannelResultOutput) SlackId() pulumix.Output[string] {
	return pulumix.Apply[*GetOnCallSlackChannelResult](o, func(v *GetOnCallSlackChannelResult) string { return v.SlackId })
}
