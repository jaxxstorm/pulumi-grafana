// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/outgoing_webhooks/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.LookupOncallOutgoingWebhook(ctx, &grafana.LookupOncallOutgoingWebhookArgs{
//				Name: "example_outgoing_webhook",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOncallOutgoingWebhook(ctx *pulumi.Context, args *LookupOncallOutgoingWebhookArgs, opts ...pulumi.InvokeOption) (*LookupOncallOutgoingWebhookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOncallOutgoingWebhookResult
	err := ctx.Invoke("grafana:index/getOncallOutgoingWebhook:getOncallOutgoingWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOncallOutgoingWebhook.
type LookupOncallOutgoingWebhookArgs struct {
	// The outgoing webhook name.
	Name string `pulumi:"name"`
}

// A collection of values returned by getOncallOutgoingWebhook.
type LookupOncallOutgoingWebhookResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The outgoing webhook name.
	Name string `pulumi:"name"`
}

func LookupOncallOutgoingWebhookOutput(ctx *pulumi.Context, args LookupOncallOutgoingWebhookOutputArgs, opts ...pulumi.InvokeOption) LookupOncallOutgoingWebhookResultOutput {
	outputResult := pulumix.ApplyErr[*LookupOncallOutgoingWebhookArgs](args.ToOutput(), func(plainArgs *LookupOncallOutgoingWebhookArgs) (*LookupOncallOutgoingWebhookResult, error) {
		return LookupOncallOutgoingWebhook(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupOncallOutgoingWebhookResultOutput, *LookupOncallOutgoingWebhookResult](outputResult)
}

// A collection of arguments for invoking getOncallOutgoingWebhook.
type LookupOncallOutgoingWebhookOutputArgs struct {
	// The outgoing webhook name.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args LookupOncallOutgoingWebhookOutputArgs) ToOutput() pulumix.Output[*LookupOncallOutgoingWebhookArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupOncallOutgoingWebhookArgs {
		return &LookupOncallOutgoingWebhookArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type LookupOncallOutgoingWebhookResultOutput struct{ *pulumi.OutputState }

func (LookupOncallOutgoingWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOncallOutgoingWebhookResult)(nil)).Elem()
}

func (o LookupOncallOutgoingWebhookResultOutput) ToOutput(context.Context) pulumix.Output[*LookupOncallOutgoingWebhookResult] {
	return pulumix.Output[*LookupOncallOutgoingWebhookResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupOncallOutgoingWebhookResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupOncallOutgoingWebhookResult](o, func(v *LookupOncallOutgoingWebhookResult) string { return v.Id })
}

func (o LookupOncallOutgoingWebhookResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupOncallOutgoingWebhookResult](o, func(v *LookupOncallOutgoingWebhookResult) string { return v.Name })
}
